{
    "acronym": "Acronym",
    "activationfunctions": "Activation Functions",
    "ahocorasick": "Aho-Corasick",
    "algorithms": "Algorithms",
    "arima": "ARIMA",
    "array": "Array",
    "associationalgorithms": "Association-Algorithms",
    "associativemining": "Associative Mining",
    "automaton": "Automaton",
    "avl": "Avl",
    "backtracking": "Backtracking",
    "backwardoraclematching": "Backward Oracle Matching",
    "bags": "Bags",
    "basic": "Basic",
    "basicsoftensorflow": "Basics of Tensorflow",
    "binaryheap": "Binary Heap",
    "binarytree": "Binary Tree",
    "bitmanipulation": "Bit Manipulation",
    "blockchain": "Blockchain",
    "booleanalgebra": "Boolean Algebra",
    "buffers": "Buffers",
    "cache": "Cache",
    "caesar": "Caesar",
    "cellularautomata": "Cellular Automata",
    "ciphers": "Ciphers",
    "classificationalgorithms": "Classification-Algorithms",
    "clientserver": "Client Server",
    "cll": "Cll",
    "clusteringalgorithms": "Clustering-Algorithms",
    "codewars": "Codewars",
    "combination": "Combination",
    "complementaryfilter": "ComplementaryFilter",
    "compression": "Compression",
    "computervision": "Computer Vision",
    "conversion": "Conversion",
    "conversions": "Conversions",
    "cosinesimilarity": "Cosine-Similarity",
    "crypto": "Crypto",
    "datamanipulation": "Data-Manipulation",
    "datapreprocessing": "Data-Preprocessing",
    "datastructures": "Data Structures",
    "dbscan": "Dbscan",
    "decisiontree": "Decision Tree",
    "decisiontreeregressionwithkfoldcrossvalidation": "Decision Tree Regression with K-Fold Cross Validation",
    "developertools": "Developer Tools",
    "dictionary": "Dictionary",
    "diffiehellman": "Diffiehellman",
    "digitalimageprocessing": "Digital Image Processing",
    "discretemathematics": "Discrete Mathematics",
    "disjointset": "Disjoint Set",
    "dithering": "Dithering",
    "divideandconquer": "Divide and Conquer",
    "divisibilityofintegers": "Divisibility of Integers",
    "dynamic": "Dynamic",
    "dynamicarray": "DynamicArray",
    "dynamicprogramming": "Dynamic Programming",
    "edgedetection": "Edge Detection",
    "electronics": "Electronics",
    "exercism": "Exercism",
    "filetransfer": "File Transfer",
    "filters": "Filters",
    "forecasting": "Forecasting",
    "fractals": "Fractals",
    "fundamentalsofpython": "Fundamentals of Python",
    "fuzzylogic": "Fuzzy Logic",
    "games": "Games",
    "ganspytorchvanillalsdc": "GANs-PyTorch-Vanilla-LS-DC",
    "gcd": "Gcd",
    "general": "General",
    "genetic": "Genetic",
    "geneticalgorithm": "Genetic Algorithm",
    "geodesy": "Geodesy",
    "geometry": "Geometry",
    "gradientdescent": "Gradient-Descent",
    "graphics": "Graphics",
    "graphs": "Graphs",
    "greedyalgorithms": "Greedy Algorithms",
    "greedyapproach": "Greedy Approach",
    "hashing": "Hashing",
    "hashmap": "HashMap",
    "hashset": "Hash Set",
    "hashtable": "Hash Table",
    "heap": "Heap",
    "heaps": "Heaps",
    "helloworld": "Hello World",
    "histogramequalization": "Histogram Equalization",
    "horspool": "Horspool",
    "imageprocessing": "ImageProcessing",
    "isogram": "Isogram",
    "kmeans": "Kmeans",
    "kmp": "Kmp",
    "knapsack": "Knapsack",
    "lcm": "Lcm",
    "levenshtein": "Levenshtein",
    "linearalgebra": "Linear Algebra",
    "linearregression": "Linear Regression",
    "linkedlist": "Linked List",
    "list": "List",
    "logisticregression": "Logistic-Regression",
    "lsbbasedimagesteganography": "LSB Based Image Steganography",
    "lstm": "Lstm",
    "machinelearning": "Machine Learning",
    "main": "Main",
    "math": "Math",
    "matplotlib": "Matplotlib",
    "matrix": "Matrix",
    "max": "Max",
    "maxsubarraysum": "Maxsubarraysum",
    "minimizationofpolynomialfunction": "Minimization of Polynomial Function",
    "minimizinglateness": "MinimizingLateness",
    "modular": "Modular",
    "moserdebruijnsequence": "Moserdebruijnsequence",
    "movierecommendationsystem": "Movie Recommendation System",
    "naivebayes": "Naive Bayes",
    "naivebayesclassification": "Naive Bayes Classification",
    "naturallanguageprocessing": "Natural Language Processing",
    "navigation": "Navigation",
    "nearestneighbhorinterpolation": "Nearest Neighbhor Interpolation",
    "nearestneighbor": "Nearest-Neighbor",
    "nested": "Nested",
    "networkingflow": "Networking Flow",
    "neuralnetwork": "Neural Network",
    "numbertheory": "Number Theory",
    "numericalanalysis": "Numerical Analysis",
    "numericalmethods": "Numerical Methods",
    "numpy": "Numpy",
    "operationsondatastructures": "Operations on Datastructures",
    "others": "Others",
    "pandas": "Pandas",
    "parsing": "Parsing",
    "particleswarmoptimization": "Particle Swarm Optimization",
    "password": "Password",
    "patternsearch": "Pattern Search",
    "permutation": "Permutation",
    "physics": "Physics",
    "polybius": "Polybius",
    "polynomialminimization": "Polynomial Minimization",
    "power": "Power",
    "prime": "Prime",
    "probability": "Probability",
    "projectrosalind": "Project-Rosalind",
    "prophet": "Prophet",
    "pythagoras": "Pythagoras",
    "quadtree": "Quad Tree",
    "quantum": "Quantum",
    "queue": "Queue",
    "queues": "Queues",
    "randomforestclassification": "Random Forest Classification",
    "randomforestregression": "Random Forest Regression",
    "rangequeries": "Range Queries",
    "recursion": "Recursion",
    "recursive": "Recursive",
    "regressionalgorithms": "Regression-Algorithms",
    "resize": "Resize",
    "restrictedtowerofhanoi": "RestrictedTowerOfHanoi",
    "reutersonevsrestclassifier": "Reuters One vs Rest Classifier",
    "rnatranscription": "Rna Transcription",
    "rnn": "RNN",
    "robotics": "Robotics",
    "rot13": "Rot13",
    "rotation": "Rotation",
    "rsa": "Rsa",
    "scheduling": "Scheduling",
    "scikitlearn": "Scikit-Learn",
    "scripts": "Scripts",
    "sdbmhash": "Sdbm-Hash",
    "searches": "Searches",
    "series": "Series",
    "set": "Set",
    "shuntingyard": "Shunting Yard",
    "sieveoferatosthenes": "Sieve of Eratosthenes",
    "sortingalgorithms": "Sorting-Algorithms",
    "sorts": "Sorts",
    "spanningtree": "Spanning Tree",
    "specializedstructure": "SpecializedStructure",
    "src": "Src",
    "stack": "Stack",
    "stacklinkedlist": "Stack Linked List",
    "stacks": "Stacks",
    "statistics": "Statistics",
    "strings": "Strings",
    "structure": "Structure",
    "supportvectormachine": "Support Vector Machine",
    "textclassification": "Text Classification",
    "timingfunctions": "Timing-Functions",
    "tree": "Tree",
    "trie": "Trie",
    "tries": "Tries",
    "unionfind": "Union Find",
    "vectors": "Vectors",
    "webprogramming": "Web Programming",
    "wordcount": "Word Count",
    "xor": "Xor"
}